// <auto-generated />
using System;
using MAM.Allergens.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MAM.Allergens.Infrastructure.DatabaseMigrations
{
    [DbContext(typeof(AllergensDbContext))]
    [Migration("20231014141732_ExtractMaterialAggregate")]
    partial class ExtractMaterialAggregate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3");

            modelBuilder.Entity("MAM.Allergens.Domain.AllergenClassification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AllergenClassifications");
                });

            modelBuilder.Entity("MAM.Allergens.Domain.AllergenClassification", b =>
                {
                    b.OwnsOne("MAM.Allergens.Domain.AllergenByCrossContamination", "CrossContaminatingAllergens", b1 =>
                        {
                            b1.Property<string>("AllergenClassificationId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Allergens")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("AllergenClassificationId");

                            b1.ToTable("AllergenClassifications");

                            b1.WithOwner()
                                .HasForeignKey("AllergenClassificationId");
                        });

                    b.OwnsOne("MAM.Allergens.Domain.AllergenByNature", "ByNatureAllergens", b1 =>
                        {
                            b1.Property<string>("AllergenClassificationId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Allergens")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("AllergenClassificationId");

                            b1.ToTable("AllergenClassifications");

                            b1.WithOwner()
                                .HasForeignKey("AllergenClassificationId");
                        });

                    b.Navigation("ByNatureAllergens")
                        .IsRequired();

                    b.Navigation("CrossContaminatingAllergens")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
